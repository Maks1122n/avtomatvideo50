"""
MediaFlux Hub - Tasks Management API  
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
"""

from fastapi import APIRouter, HTTPException
from typing import List, Optional
from datetime import datetime, timedelta
import uuid

router = APIRouter()

@router.get("/")
async def get_tasks(status: Optional[str] = None):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    tasks = [
        {
            "task_id": "task_001",
            "account": "@lifestyle_vibes_daily",
            "video": "motivation/success_story.mp4",
            "caption": "–°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω—ã—Ö –ª—é–¥–µ–π üí™ #success #motivation",
            "scheduled_time": "2024-01-15 16:30",
            "status": "pending",
            "created": "2024-01-15 14:20"
        },
        {
            "task_id": "task_002", 
            "account": "@business_mindset_pro",
            "video": "business/entrepreneurship_tips.mp4",
            "caption": "3 –ø—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ üöÄ #business #entrepreneur",
            "scheduled_time": "2024-01-15 18:15",
            "status": "pending",
            "created": "2024-01-15 14:25"
        },
        {
            "task_id": "task_003",
            "account": "@motivation_quotes_hub", 
            "video": "motivation/daily_quotes.mp4",
            "caption": "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚ú® #motivation #quotes",
            "scheduled_time": "2024-01-15 20:00", 
            "status": "completed",
            "created": "2024-01-15 10:30",
            "completed": "2024-01-15 12:15"
        }
    ]
    
    if status:
        tasks = [t for t in tasks if t["status"] == status]
    
    return {
        "tasks": tasks,
        "total": len(tasks),
        "pending": len([t for t in tasks if t["status"] == "pending"]),
        "completed": len([t for t in tasks if t["status"] == "completed"]),
        "failed": len([t for t in tasks if t["status"] == "failed"])
    }

@router.post("/")
async def create_task(task_data: dict):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    new_task = {
        "task_id": str(uuid.uuid4()),
        "account": task_data["account"],
        "video": task_data["video"],
        "caption": task_data.get("caption", ""),
        "scheduled_time": task_data["scheduled_time"],
        "status": "pending",
        "created": datetime.now().isoformat()
    }
    
    return {
        "message": "–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞",
        "task": new_task
    }

@router.get("/schedule")
async def get_schedule():
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π"""
    return {
        "today": 12,
        "tomorrow": 15,
        "this_week": 89,
        "next_7_days": [
            {"date": "2024-01-15", "posts": 12},
            {"date": "2024-01-16", "posts": 15}, 
            {"date": "2024-01-17", "posts": 18},
            {"date": "2024-01-18", "posts": 14},
            {"date": "2024-01-19", "posts": 16},
            {"date": "2024-01-20", "posts": 20},
            {"date": "2024-01-21", "posts": 11}
        ]
    } 